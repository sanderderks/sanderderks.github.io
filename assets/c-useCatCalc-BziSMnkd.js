import{w as r,al as L,f as o,aD as c}from"../bundle.js";const Q=[{value:"average",label:"Average"},{value:"nvwa",label:"NVWA"},{value:"royalcanin",label:"Royal Canin"},{value:"petsplace",label:"Pets Place"},{value:"rawz",label:"RAWZ"},{value:"petcube",label:"Petcube"}],O=[{value:"default",label:"Adult healthy",rerIndex:1.4},{value:"lazy",label:"Adult lazy",rerIndex:1},{value:"castrated",label:"Adult castrated",rerIndex:1.2},{value:"underweight",label:"Adult underfed",rerIndex:1.8},{value:"overweight",label:"Adult overfed",rerIndex:.8},{value:"kitten0.4",label:"Kitten 0-4 months",rerIndex:2.5},{value:"kitten1",label:"Kitten 4-12 months",rerIndex:2}],T=[{value:"male",label:"Male"},{value:"female",label:"Female"}],w=[{value:"default",label:"Average (340kcal)",calories:340},{value:"yarrah",label:"Yarrah Chicken (362kcal)",calories:361.5},{value:"yarrah_sterilized",label:"Yarrah Chicken sterilized (353kcal)",calories:353}],M=[{value:"",label:"None",calories:0},{value:"default",label:"Average (85kcal)",calories:85}],B=[{value:"",label:"None",calories:0},{value:"default",label:"Average (2kcal)",calories:2},{value:"yarrah",label:"Yarrah Mini Snack (2kcal)",calories:2},{value:"catstick",label:"Vitakraft Cat Stick (12kcal)",calories:12},{value:"milk_average",label:"Milk Average (40kcal/50ml)",calories:40},{value:"dried_fish",label:"Dried Fish (8kcal)",calories:8}],g={nvwa:[{weight:0,calories:0},{weight:1,calories:200},{weight:2,calories:200},{weight:3,calories:240},{weight:4,calories:280},{weight:5,calories:320},{weight:6,calories:360},{weight:7,calories:400},{weight:8,calories:440},{weight:9,calories:480},{weight:10,calories:520}],royalcanin:[{weight:0,calories:0},{weight:1,calories:225},{weight:2,calories:225},{weight:3,calories:275},{weight:4,calories:325},{weight:5,calories:375},{weight:6,calories:425},{weight:7,calories:475},{weight:8,calories:525},{weight:9,calories:575},{weight:10,calories:625}],petsplace:[{weight:0,calories:0},{weight:.5,calories:39},{weight:.9,calories:65},{weight:1.4,calories:88},{weight:1.8,calories:110},{weight:2.3,calories:130},{weight:2.7,calories:149},{weight:3.2,calories:167},{weight:3.6,calories:184},{weight:4.1,calories:200},{weight:4.5,calories:218},{weight:5,calories:234},{weight:5.5,calories:250},{weight:5.9,calories:265},{weight:6.4,calories:280},{weight:6.8,calories:295},{weight:7.3,calories:310},{weight:7.7,calories:324},{weight:8.2,calories:339},{weight:8.6,calories:353},{weight:9.1,calories:366},{weight:11.4,calories:433}],rawz:[{weight:0,calories:0},{weight:1,calories:183},{weight:2.268,calories:183},{weight:3.402,calories:245},{weight:4.536,calories:303},{weight:5.67,calories:362},{weight:6.804,calories:413},{weight:7.938,calories:462},{weight:9.072,calories:513}],petcube:[{weight:.45,calories:40},{weight:.9,calories:65},{weight:2.3,calories:140},{weight:3.15,calories:166},{weight:4.5,calories:250},{weight:6.8,calories:325},{weight:9.1,calories:400},{weight:11.25,calories:450}],average:[]},X=(N,F,P,V,Y,_,d,f,b)=>{const m=r("average"),A=r(""),y=r("default"),s=r("male"),p=r("35"),k=r("default"),x=r(""),S=r(""),h=r("");L(()=>{m.value=c(N),A.value=c(F).toString(),y.value=c(P),s.value=c(V),p.value=c(Y),k.value=c(_),d&&(x.value=c(d)),f&&(S.value=c(f)),b&&(h.value=c(b))});const W=o(()=>[{value:"35",label:"Small (<25cm)",factor:s.value==="male"?.9:.75},{value:"40",label:"Average (25-30cm)",factor:s.value==="male"?1:.9},{value:"45",label:"Big (30-35cm)",factor:s.value==="male"?1.125:1},{value:"65",label:"Pretty damn big (35-40cm)",factor:s.value==="male"?1.6:1.4},{value:"90",label:"Massive (>40cm)",factor:s.value==="male"?2.25:2}]),K=o(()=>Z(m.value,Number(A.value))),R=o(()=>{var e;return K.value*(((e=O.find(l=>l.value===y.value))==null?void 0:e.rerIndex)??1)}),v=o(()=>{var e;return R.value*(((e=W.value.find(l=>l.value===p.value))==null?void 0:e.factor)??1)}),C=o(()=>{const e=B.find(l=>l.value===S.value);return e!=null&&e.calories?v.value*(Number(h.value)/100)/e.calories:void 0}),z=o(()=>v.value*(1-Number(C.value?h.value:0)/100)),I=o(()=>{const e=M.find(l=>l.value===x.value);return e!=null&&e.calories?z.value/4/e.calories*100:void 0}),j=o(()=>z.value/4*(I.value?3:4)),E=o(()=>{var e;return j.value/(((e=w.find(l=>l.value===k.value))==null?void 0:e.calories)??w[0].calories)*100}),G=(e,l)=>{const a=g[e].sort((t,J)=>t.weight-J.weight);let i=a[a.length-2].weight,u=a[a.length-2].calories,q=a[a.length-1].weight,D=a[a.length-1].calories;for(let t=0;t<a.length-1;t++)if(l>=a[t].weight&&l<=a[t+1].weight){i=a[t].weight,u=a[t].calories,q=a[t+1].weight,D=a[t+1].calories;break}return{x1:i,y1:u,x2:q,y2:D}},Z=(e,l)=>{const{x1:n,y1:a,x2:i,y2:u}=G(e,l);return a+(l-n)*(u-a)/(i-n)},H=()=>{const e=new Map;for(const a of Object.values(g).filter(i=>i!==g.average))for(const{weight:i,calories:u}of a)e.has(i)||e.set(i,{sum:0,count:0}),e.get(i).sum+=u,e.get(i).count++;return[0,1,2,3,4,5,6,7,8,9,10].filter(a=>e.has(a)).map(a=>({weight:a,calories:e.get(a).sum/e.get(a).count}))};return g.average=H(),{calculatorOptions:Q,catAgeOptions:O,catGenderOptions:T,catSizeOptions:W,requiredCaloriesByWeightAndAgeAndSize:v,catFoodDryOptions:w,catFoodWetOptions:M,requiredFoodDry:E,requiredFoodWet:I,catFoodSnaxOptions:B,requiredFoodSnax:C}};export{X as u};
