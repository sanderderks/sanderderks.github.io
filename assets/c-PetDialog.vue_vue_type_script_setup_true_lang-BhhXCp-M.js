import{_ as me}from"./c-Dialog.vue_vue_type_script_setup_true_lang-CFG94sGa.js";import{d as le,w as n,f as w,g as ve,j as D,k as l,q as v,aL as g,P as p,h as o,Q as C,_ as oe,c as ge,aE as fe,s as ae,a9 as Ve,aM as ce,ai as we,L as De,l as U,A as d,a5 as F,a2 as k,a3 as O,I as $,a4 as S,m as z,T as N,aH as pe,aI as be,aJ as ye,r as xe,U as re,aN as Ue,a0 as te,aK as Fe,ao as ke}from"../bundle.js";const Se={class:"flex flex-col gap-3 md:px-5"},Ce={class:"mt-3 flex justify-evenly font-bold"},he=le({__name:"PetLogDialogSection",props:{id:{},log:{}},emits:["error","delete"],setup(E,{expose:h,emit:u}){const b=u,y=n(),f=n(),V=n(),c=n(),L=w(()=>[V.value,c.value].some(e=>!!e));return h({test:async()=>{var e,i;await Promise.all([(e=y.value)==null?void 0:e.test(),(i=f.value)==null?void 0:i.test()]),b("error",L.value)}}),(e,i)=>(D(),ve("div",Se,[l(g,{ref_key:"dateField",ref:y,id:e.id,name:"logDate",label:"Date",modelValue:e.log.date,"onUpdate:modelValue":i[0]||(i[0]=s=>e.log.date=s),error:V.value,"onUpdate:error":i[1]||(i[1]=s=>V.value=s),"without-time":""},null,8,["id","modelValue","error"]),l(p,{ref_key:"weightField",ref:f,id:e.id,name:"logWeight",label:"Weight (kg)","model-value":`${e.log.weight}`,"onUpdate:modelValue":i[2]||(i[2]=s=>e.log.weight=Number(s)),error:c.value,"onUpdate:error":i[3]||(i[3]=s=>c.value=s),rules:[o(C).Required,o(C).Numeric],"min-value":0,"input-props":{type:"number"}},null,8,["id","model-value","error","rules"]),v("div",Ce,[l(oe,{class:"w-full sm:w-2/3 md:w-1/2 xl:w-2/3",variant:"danger",outlined:"",label:"Delete",onClick:i[4]||(i[4]=s=>e.$emit("delete"))})])]))}}),Le={class:"pt-6 mb-4 xl:px-16 flex flex-col gap-3"},Pe={class:"flex gap-5"},Be={class:"flex justify-center"},Oe={class:"basis-full lg:basis-1/2"},Ne=le({__name:"PetDialog",props:{isOpen:{type:Boolean},originalPet:{}},emits:["close"],setup(E,{emit:h}){const u=E,b=h,y=ge(),f=fe(),{isMutationLoading:V}=ae(f),{firebaseUser:c}=ae(y),{mutatePet:L}=f,P=r=>({name:{value:(r==null?void 0:r.name)??"",error:""},description:{value:(r==null?void 0:r.description)??"",error:""},avatar:{value:(r==null?void 0:r.avatar)??"",error:""},dateOfBirth:{value:r!=null&&r.dateOfBirth?new Date(r.dateOfBirth):null,error:""},type:{value:(r==null?void 0:r.type)??"cat",error:""},breed:{value:(r==null?void 0:r.breed)??"",error:""},breedSize:{value:(r==null?void 0:r.breedSize)??"medium",error:""},gender:{value:(r==null?void 0:r.gender)??"male",error:""},weight:{value:r!=null&&r.weight?r.weight.toString():"",error:""},insideCat:{value:(r==null?void 0:r.insideCat)??!1,error:""},castrated:{value:(r==null?void 0:r.castrated)??!1,error:""},dewormingDate:{value:r!=null&&r.dewormingDate?new Date(r.dewormingDate):null,error:""},vetDate:{value:r!=null&&r.vetDate?new Date(r.vetDate):null,error:""},lastVaccinationDate:{value:r!=null&&r.lastVaccinationDate?new Date(r.lastVaccinationDate):null,error:""},nextVaccinationDate:{value:r!=null&&r.nextVaccinationDate?new Date(r.nextVaccinationDate):null,error:""},weightLog:{value:r!=null&&r.weightLog?r.weightLog.map(a=>({...a,date:new Date(a.date)})):[],error:{}}}),e=Ve(P(u.originalPet)),i=w(()=>{var r,a;return{name:e.name.value,description:e.description.value,userId:((r=u.originalPet)==null?void 0:r.userId)??((a=c.value)==null?void 0:a.uid)??"",avatar:e.avatar.value,dateOfBirth:e.dateOfBirth.value??null,type:e.type.value,breed:e.breed.value,breedSize:e.breedSize.value,gender:e.gender.value,weight:isNaN(+e.weight.value)?null:+e.weight.value,insideCat:e.type.value==="cat"?e.insideCat.value:null,castrated:e.castrated.value,dewormingDate:e.dewormingDate.value??null,vetDate:e.vetDate.value??null,lastVaccinationDate:e.lastVaccinationDate.value??null,nextVaccinationDate:e.nextVaccinationDate.value??null,weightLog:e.weightLog.value}}),s=n(),I=n(),j=n(),M=n(),R=n(),T=n(),W=n(),q=n(),A=n(),K=n(),G=n(),H=n(),J=n(),Q=n(),X=n(),Y=n([]),B=w(()=>u.originalPet?ce.convert(u.originalPet):null),Z=w(()=>!we(B.value,i.value)),_=w(()=>{if(e.name.value)return e.name.value;switch(e.type.value){case"cat":return"Cat";case"dog":return"Dog";default:return"Pet"}}),ne=async()=>{var r,a,t,x;await Promise.all([s.value.test(),I.value.test(),j.value.test(),M.value.test(),R.value.test(),T.value.test(),(r=W.value)==null?void 0:r.test(),q.value.test(),(a=A.value)==null?void 0:a.test(),(t=K.value)==null?void 0:t.test(),G.value.test(),H.value.test(),Q.value.test(),X.value.test(),J.value.test()]);for(const m of Y.value)await(m==null?void 0:m.test());e.name.error||e.description.error||e.avatar.error||e.dateOfBirth.error||e.type.error||e.breed.error||e.breedSize.error||e.gender.error||e.weight.error||e.insideCat.error||e.castrated.error||e.dewormingDate.error||e.vetDate.error||e.lastVaccinationDate.error||e.nextVaccinationDate.error||Object.values(e.weightLog.error).some(m=>!!m)||(await L(i.value,(x=u.originalPet)==null?void 0:x.id),b("close"))},ie=()=>{e.weightLog.value.push({date:new Date,weight:0})},ee=r=>e.weightLog.value.findIndex(a=>a.date.toString()===r),de=r=>{e.weightLog.value.splice(ee(r),1)},se=(r,a)=>{e.weightLog.error[ee(a)]=r},ue=()=>{b("close")};return De(()=>[u.isOpen,u.originalPet],()=>{Object.assign(e,P(u.originalPet))}),(r,a)=>(D(),U(me,{isOpen:r.isOpen,title:B.value?"Update Pet":"Create Pet",description:"Keep in mind that pet data is visible to all authenticated users.","confirm-text":B.value?Z.value?"Update":"Nothing changed":"Create","confirm-loading":o(V),"confirm-props":{disabled:!Z.value},onConfirm:ne,onCancel:ue},{default:d(()=>[v("form",Le,[l(p,{ref_key:"nameField",ref:s,id:"name",name:"name",label:"Name",placeholder:"Mogu",modelValue:e.name.value,"onUpdate:modelValue":a[0]||(a[0]=t=>e.name.value=t),error:e.name.error,"onUpdate:error":a[1]||(a[1]=t=>e.name.error=t),rules:[o(C).Required],"min-length":3,"max-length":50},null,8,["modelValue","error","rules"]),l(p,{ref_key:"descriptionField",ref:I,id:"description",name:"description",label:"Description",placeholder:"My cute pet.",modelValue:e.description.value,"onUpdate:modelValue":a[2]||(a[2]=t=>e.description.value=t),error:e.description.error,"onUpdate:error":a[3]||(a[3]=t=>e.description.error=t),"max-length":100},null,8,["modelValue","error"]),l(o(te),null,{default:d(()=>[l(o(F),{value:"details"},{default:d(()=>[l(o(k),null,{default:d(()=>[O($(_.value)+"'s Details ",1)]),_:1}),l(o(S),{"pt:content":"flex flex-col gap-3"},{default:d(()=>[l(g,{ref_key:"dateOfBirthField",ref:M,name:"dateOfBirth",label:"Date of birth",modelValue:e.dateOfBirth.value,"onUpdate:modelValue":a[4]||(a[4]=t=>e.dateOfBirth.value=t),error:e.dateOfBirth.error,"onUpdate:error":a[5]||(a[5]=t=>e.dateOfBirth.error=t),"without-time":""},null,8,["modelValue","error"]),l(N,{ref_key:"typeField",ref:R,name:"type",label:"Type",modelValue:e.type.value,"onUpdate:modelValue":a[6]||(a[6]=t=>e.type.value=t),error:e.type.error,"onUpdate:error":a[7]||(a[7]=t=>e.type.error=t),options:o(pe)},null,8,["modelValue","error","options"]),l(p,{ref_key:"breedField",ref:T,id:"breed",name:"breed",label:"Breed",placeholder:e.type.value==="dog"?"Golden Retriever":"Maine Coone",modelValue:e.breed.value,"onUpdate:modelValue":a[8]||(a[8]=t=>e.breed.value=t),error:e.breed.error,"onUpdate:error":a[9]||(a[9]=t=>e.breed.error=t),"min-length":3,"max-length":50},null,8,["placeholder","modelValue","error"]),e.type.value==="dog"?(D(),U(N,{key:0,ref_key:"breedSizeField",ref:W,name:"breedSize",label:"Breed Size",modelValue:e.breedSize.value,"onUpdate:modelValue":a[10]||(a[10]=t=>e.breedSize.value=t),error:e.breedSize.error,"onUpdate:error":a[11]||(a[11]=t=>e.breedSize.error=t),options:o(be)},null,8,["modelValue","error","options"])):z("",!0),l(N,{ref_key:"genderField",ref:q,name:"gender",label:"Gender",modelValue:e.gender.value,"onUpdate:modelValue":a[12]||(a[12]=t=>e.gender.value=t),error:e.gender.error,"onUpdate:error":a[13]||(a[13]=t=>e.gender.error=t),options:o(ye)},null,8,["modelValue","error","options"])]),_:1})]),_:1}),l(o(F),{value:"health"},{default:d(()=>[l(o(k),null,{default:d(()=>[O($(_.value)+"'s Health ",1)]),_:1}),l(o(S),{"pt:content":"flex flex-col gap-3"},{default:d(()=>[e.weightLog.value.length?z("",!0):(D(),U(p,xe({key:0,ref_key:"weightField",ref:A,name:"weight",label:"Weight (kg)",modelValue:e.weight.value,"onUpdate:modelValue":a[14]||(a[14]=t=>e.weight.value=t),error:e.weight.error,"onUpdate:error":a[15]||(a[15]=t=>e.weight.error=t)},e.weight.value?{rules:[o(C).Numeric],minValue:0}:void 0,{"input-props":{type:"number"}}),null,16,["modelValue","error"])),e.type.value==="cat"?(D(),U(re,{key:1,ref_key:"insideCatField",ref:K,name:"insideCat",label:"Inside Cat",modelValue:e.insideCat.value,"onUpdate:modelValue":a[16]||(a[16]=t=>e.insideCat.value=t)},null,8,["modelValue"])):z("",!0),l(re,{ref_key:"castratedField",ref:G,name:"castrated",label:"Castrated or Sterilized",modelValue:e.castrated.value,"onUpdate:modelValue":a[17]||(a[17]=t=>e.castrated.value=t)},null,8,["modelValue"]),l(g,{ref_key:"vetDateField",ref:J,name:"vetDate",label:"Last vet visit",modelValue:e.vetDate.value,"onUpdate:modelValue":a[18]||(a[18]=t=>e.vetDate.value=t),error:e.vetDate.error,"onUpdate:error":a[19]||(a[19]=t=>e.vetDate.error=t),"without-time":""},null,8,["modelValue","error"]),l(g,{ref_key:"lastVaccinationDateField",ref:Q,name:"lastVaccinationDate",label:"Last vaccination",modelValue:e.lastVaccinationDate.value,"onUpdate:modelValue":a[20]||(a[20]=t=>e.lastVaccinationDate.value=t),error:e.lastVaccinationDate.error,"onUpdate:error":a[21]||(a[21]=t=>e.lastVaccinationDate.error=t),"without-time":""},null,8,["modelValue","error"]),l(g,{ref_key:"nextVaccinationDateField",ref:X,name:"nextVaccinationDate",label:"Next vaccination",modelValue:e.nextVaccinationDate.value,"onUpdate:modelValue":a[22]||(a[22]=t=>e.nextVaccinationDate.value=t),error:e.nextVaccinationDate.error,"onUpdate:error":a[23]||(a[23]=t=>e.nextVaccinationDate.error=t),"without-time":""},null,8,["modelValue","error"]),l(g,{ref_key:"dewormingDateField",ref:H,name:"dewormingDate",label:"Last deworming date",modelValue:e.dewormingDate.value,"onUpdate:modelValue":a[24]||(a[24]=t=>e.dewormingDate.value=t),error:e.dewormingDate.error,"onUpdate:error":a[25]||(a[25]=t=>e.dewormingDate.error=t),"without-time":""},null,8,["modelValue","error"])]),_:1})]),_:1}),l(o(F),{value:"Weight Log"},{default:d(()=>[l(o(k),null,{default:d(()=>a[29]||(a[29]=[O(" Weight Log ")])),_:1,__:[29]}),l(o(S),{"pt:content":"flex flex-col gap-3"},{default:d(()=>[l(o(Ue),{ref:"draggable",class:"flex flex-col gap-3",modelValue:e.weightLog.value,"onUpdate:modelValue":a[26]||(a[26]=t=>e.weightLog.value=t),itemKey:t=>t.date.toString(),handle:".drag-handle"},{item:d(({element:t,index:x})=>[l(o(te),null,{default:d(()=>[l(o(F),{value:"0"},{default:d(()=>[l(o(k),{class:"drag-handle"},{default:d(()=>[v("div",Pe,[a[30]||(a[30]=v("i",{class:"pi pi-arrows-v place-self-center hover:cursor-pointer"},null,-1)),v("p",null,$(o(Fe)(t.date)),1)])]),_:2},1024),l(o(S),null,{default:d(()=>[l(he,{ref:m=>{Y.value[x]=m},id:t.date.toString(),log:t,onDelete:m=>de(t.date.toString()),onError:m=>se(m,t.date.toString())},null,8,["id","log","onDelete","onError"])]),_:2},1024)]),_:2},1024)]),_:2},1024)]),_:1},8,["modelValue","itemKey"]),v("div",Be,[l(oe,{class:"w-1/2",variant:"green",label:"Add Log",onClick:ie})])]),_:1})]),_:1})]),_:1}),v("div",Oe,[l(ke,{ref_key:"avatarField",ref:j,id:"avatar",name:"avatar",label:"Avatar",modelValue:e.avatar.value,"onUpdate:modelValue":a[27]||(a[27]=t=>e.avatar.value=t),error:e.avatar.error,"onUpdate:error":a[28]||(a[28]=t=>e.avatar.error=t),"is-public":"","blog-post":null,"image-props":{class:"rounded-full"},"image-container-props":{class:"!h-64 !w-64"}},null,8,["modelValue","error"])])])]),_:1},8,["isOpen","title","confirm-text","confirm-loading","confirm-props"]))}});export{Ne as _};
