import{_ as ee,a as le}from"./c-SwitchField.vue_vue_type_script_setup_true_lang-JQE6dSwt.js";import{_ as Y}from"./c-SelectField.vue_vue_type_script_setup_true_lang-Bu9S1e-e.js";import{d as ae,aG as Z,aH as F,s as x,r as y,a as se,c as S,aK as q,aI as b,aL as oe,aM as j,aJ as ue,e as ie,cx as te,l as ne,q as ve,D as ce,n as C,k,ab as W}from"../bundle.js";var re=(a=>(a[a.HAS_NOT_STARTED=0]="HAS_NOT_STARTED",a[a.HAS_STARTED=1]="HAS_STARTED",a[a.HAS_THROWN_DICES=2]="HAS_THROWN_DICES",a[a.HAS_CHOSEN_DICES=3]="HAS_CHOSEN_DICES",a[a.HAS_CHOSEN_TILE=4]="HAS_CHOSEN_TILE",a[a.HAS_LOST=5]="HAS_LOST",a[a.HAS_FINISHED=6]="HAS_FINISHED",a))(re||{}),de=(a=>(a[a.NONE=0]="NONE",a[a.HAS_LOST_TILE=1]="HAS_LOST_TILE",a[a.HAS_LOST_NOTHING=2]="HAS_LOST_NOTHING",a))(de||{}),fe=(a=>(a[a.NONE=0]="NONE",a[a.WINNER_HIGHEST_SCORE=1]="WINNER_HIGHEST_SCORE",a[a.WINNER_HIGHEST_TILE=2]="WINNER_HIGHEST_TILE",a[a.LOSER=3]="LOSER",a))(fe||{}),pe=(a=>(a[a.PLAYER=0]="PLAYER",a[a.ROBOT=1]="ROBOT",a))(pe||{});const ge=a=>{for(let p=1;p<=6;p++)if(a.every(T=>T.value===p))return!0;return!1},z=()=>({0:[],1:[]}),ye=ae("rainwormsStore",()=>{const a=Z(F.RAINWORMS)(),{personalBest:p,highscorePosition:T}=x(a),{setPreviousHighscores:V,fetchGameData:E,updateHighscores:N,sortHighscores:r}=a,v=y(1),u=y(0),m=y(0),h=y(0),H=y(0),d=y(0),i=y(J()),t=y(K()),f=se(z()),O=S(()=>i.value.some(e=>e.isRolling)),B=S(()=>i.value.filter(e=>e.selected).some(e=>e.value===6)),_=S(()=>e=>i.value.some(s=>s.value===e&&s.selected)),G=S(()=>e=>t.value.some(s=>s.displayValue<=e)),A=S(()=>e=>d.value===(e??0)),I=S(()=>e=>{const s=f[e??0];return s.length?s[s.length-1]:null}),c=S(()=>{let e=0;return i.value.filter(s=>s.selected).forEach(s=>{e+=s.value===6?5:s.value}),e}),D=S(()=>e=>{let s=0;return f[e].forEach(l=>{s+=l.value}),s}),Q=()=>{u.value=0,m.value=0,h.value=0,H.value=0,d.value=0,i.value=J(),t.value=K(),Object.assign(f,z()),V()},X=()=>{u.value=1},g=e=>{if(!A.value(e))return;(u.value===1||u.value===4||u.value===5)&&i.value.forEach(l=>{l.selected=!1}),u.value=2;const s=a.diceRollSpeed*1e3;i.value.forEach(l=>{l.selected||(l.isRolling=!0,setTimeout(()=>{l.value=q(6),l.isRolling=!1,i.value.sort((o,n)=>o.value-n.value),!O.value&&u.value!==5&&P()&&$(e)},q(s,s/3)))}),b(oe)},M=async()=>{for(;O.value;)await new Promise(e=>setTimeout(e,500));return!0},P=()=>{const e=i.value.filter(s=>!s.selected&&!_.value(s.value));return!e.length||ge(e)&&e.every(s=>s.value!==6)},$=e=>{u.value=5,m.value=e??0,f[m.value].length?H.value=1:H.value=2,U(),t.value.length===0?u.value=6:w()},U=()=>{const e=f[d.value];if(e.length){const s=e.splice(e.length-1,1)[0];t.value.push(s),t.value.sort((l,o)=>l.displayValue-o.displayValue)}t.value.splice(t.value.length-1,1)},L=(e,s)=>{A.value(s)&&!O.value&&u.value===2&&!e.selected&&!_.value(e.value)&&(u.value=3,i.value.filter(l=>l.value===e.value).forEach(l=>{l.selected=!0}),b(j))},R=(e,s,l)=>{if(A.value(l)&&(u.value===2||u.value===3)){if(u.value=4,m.value=l??0,s){const o=f[d.value===0?1:0];o.splice(o.length-1,1)}else t.value=t.value.filter(o=>o.displayValue!==e.displayValue);f[d.value].push(e),b(j),t.value.length===0?u.value=6:w()}},w=e=>{(d.value===1||u.value!==5||e)&&(d.value===0?setTimeout(()=>{d.value=1,setTimeout(()=>{u.value=1,m.value=0},1e3)},e?0:v.value*1e3*2):setTimeout(()=>{d.value=0},e?0:v.value*1e3*2))};return{gameStatus:u,gameStatusActivator:m,finishStatus:h,loseStatus:H,activePlayer:d,dices:i,tiles:t,score:f,robotSpeed:v,isRolling:O,hasWorm:B,hasAlreadyChosen:_,canSelectAnyTile:G,canPlay:A,visibleTile:I,selectedDiceTotal:c,totalScore:D,personalBest:p,highscorePosition:T,$reset:Q,start:X,roll:g,hasFinishedRolling:M,hasLostRound:P,loseTurn:$,popLastTile:U,selectDice:L,selectTile:R,passTurn:w,playRobot:async()=>{switch(u.value){case 1:{g(1);break}case 2:{await M(),setTimeout(()=>{const e=i.value.filter(l=>!l.selected),s=I.value(0);if(s&&c.value<s.displayValue)for(let l=6;l>=1;l--){const o=e.filter(n=>n.value===l&&!_.value(l));if(o.length){const n=o.length*(l===6?5:l);if(c.value+n===s.displayValue){L(o[0],1);return}}}for(let l=6;l>=1;l--){const o=i.value.find(n=>n.value===l);if(o&&!_.value(l)){L(o,1);return}}},v.value*1e3);break}case 3:{setTimeout(()=>{const e=I.value(0),s=i.value.filter(l=>!l.selected).length;if(!s||c.value>=30){console.log(s?"i am rich":"i can only pick a tile now");for(let l=c.value;l>=21;l--){const o=t.value.find(n=>n.displayValue===l);if(o){R(o,!1,1);return}}s&&g(1)}if(t.value.every(l=>l.displayValue>c.value)&&e&&e.displayValue>c.value)console.log("my score is too low"),g(1);else if(e&&e.displayValue===c.value)console.log("i can steal"),R(e,!0,1);else if(new Set(i.value.filter(l=>l.selected).map(l=>l.value)).size<=3)if(i.value.filter(l=>!l.selected).length<=2){console.log("there aren't that much dices left");const l=t.value.filter(o=>o.displayValue>=c.value-5&&o.displayValue<=c.value).sort((o,n)=>n.displayValue-o.displayValue);l.length?(console.log("i choose the highest score within 5 tiles"),R(l[0],!1,1)):(console.log("i choose to roll again"),g(1))}else console.log("i have nothing to worry about"),g(1);else if(!B.value)console.log("i am worrying and have no worm yet"),g(1);else{console.log("if i can choose, i choose");const l=t.value.filter(o=>o.displayValue<=c.value).sort((o,n)=>n.displayValue-o.displayValue);l.length?(console.log("i choose the highest score"),R(l[0],!1,1)):(console.log("i choose to roll again"),g(1))}},v.value*1e3);break}default:console.log("DEFAULT",u.value)}},checkFinishStatus:()=>{const e=D.value(0),s=D.value(1);e>s?h.value=1:e===s&&Math.max(...f[0].map(l=>l.displayValue))>Math.max(...f[1].map(l=>l.displayValue))?h.value=2:h.value=3,(h.value===1||h.value===2)&&(N(e),b(ue))},setPreviousHighscores:V,fetchGameData:E,updateHighscores:N,sortHighscores:r}},{persist:{enabled:!0}}),J=()=>[{id:1,value:6,selected:!1,isRolling:!1},{id:2,value:6,selected:!1,isRolling:!1},{id:3,value:6,selected:!1,isRolling:!1},{id:4,value:6,selected:!1,isRolling:!1},{id:5,value:6,selected:!1,isRolling:!1},{id:6,value:6,selected:!1,isRolling:!1},{id:7,value:6,selected:!1,isRolling:!1},{id:8,value:6,selected:!1,isRolling:!1}],K=()=>[{displayValue:21,value:1},{displayValue:22,value:1},{displayValue:23,value:1},{displayValue:24,value:1},{displayValue:25,value:2},{displayValue:26,value:2},{displayValue:27,value:2},{displayValue:28,value:2},{displayValue:29,value:3},{displayValue:30,value:3},{displayValue:31,value:3},{displayValue:32,value:3},{displayValue:33,value:4},{displayValue:34,value:4},{displayValue:35,value:4},{displayValue:36,value:4}],Ee=ie({__name:"GameSettingsDialog",props:{isOpen:{type:Boolean,required:!0},isOpenModifiers:{}},emits:["update:isOpen"],setup(a){const p=te(a,"isOpen"),{useAudio:T,diceRollSpeed:V}=x(Z(F.YAHTZEE)()),{robotSpeed:E}=x(ye());return(N,r)=>(ne(),ve(le,{isOpen:p.value,title:"Game Settings",description:"Current version: v5 (12-12-2024)",cancelText:"Close",onCancel:r[3]||(r[3]=v=>p.value=!1)},{default:ce(()=>[C(ee,{name:"useAudio",label:"Audio",modelValue:k(T),"onUpdate:modelValue":r[0]||(r[0]=v=>W(T)?T.value=v:null)},null,8,["modelValue"]),C(Y,{name:"diceSpeed",label:"Dice rolling speed",modelValue:k(V),"onUpdate:modelValue":r[1]||(r[1]=v=>W(V)?V.value=v:null),options:[{value:.5,label:"0.5 seconds"},{value:.75,label:"0.75 seconds"},{value:1,label:"1 second"},{value:1.5,label:"1.5 seconds"},{value:2,label:"2 seconds"},{value:3,label:"3 seconds"},{value:4,label:"4 seconds"},{value:5,label:"5 seconds"}]},null,8,["modelValue"]),C(Y,{name:"robotSpeed",label:"Rainworms robot speed",modelValue:k(E),"onUpdate:modelValue":r[2]||(r[2]=v=>W(E)?E.value=v:null),options:[{value:.25,label:"0.25 seconds"},{value:.5,label:"0.5 seconds"},{value:.75,label:"0.75 seconds"},{value:1,label:"1 second"},{value:3,label:"3 seconds"},{value:5,label:"5 seconds"}]},null,8,["modelValue"])]),_:1},8,["isOpen"]))}});export{fe as F,re as G,de as L,pe as P,Ee as _,ye as u};
