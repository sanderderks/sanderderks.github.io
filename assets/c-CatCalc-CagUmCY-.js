import{a as b,_ as Q}from"./c-Bubble.vue_vue_type_script_setup_true_lang-Di5vSobc.js";import{_ as d}from"./c-SelectField.vue_vue_type_script_setup_true_lang-4iDIQG91.js";import{_ as D}from"./c-TextField.vue_vue_type_script_setup_true_lang-DT8z_rfW.js";import{_ as X}from"./c-Page.vue_vue_type_script_setup_true_lang-tFpa4vFG.js";import{R as i}from"./c-validation-DokkLKHB.js";import{e as O,f as _,h as ee,g as ae,s as G,a as re,c as n,l as v,q as m,D as x,n as s,p as I,k as o,t as le,G as N,R as f}from"../bundle.js";const oe={class:"flex flex-col items-center content-center"},te=O({__name:"CatCalc",setup(B){const S=_(),V=ee(),E=ae(),{isLoggedIn:M}=G(V),{routeLoading:$}=G(E),r=re({calculator:{value:"average",error:""},catWeigth:{value:"",error:""},catAge:{value:"",error:""},catGender:{value:"male",error:""},catSize:{value:"",error:""},catFoodDry:{value:"",error:""},catFoodWet:{value:"",error:""},catFoodSnax:{value:"",error:""},catFoodSnaxPercentage:{value:"5",error:""}}),A=[{value:"average",label:"Average"},{value:"nvwa",label:"NVWA"},{value:"royalcanin",label:"Royal Canin"},{value:"petsplace",label:"Pets Place"},{value:"rawz",label:"RAWZ"},{value:"petcube",label:"Petcube"}],k=[{value:"default",label:"Adult healthy",rerIndex:1.4},{value:"lazy",label:"Adult lazy",rerIndex:1},{value:"castrated",label:"Adult castrated",rerIndex:1.2},{value:"underweight",label:"Adult underfed",rerIndex:1.8},{value:"overweight",label:"Adult overfed",rerIndex:.8},{value:"kitten0.4",label:"Kitten 0-4 months",rerIndex:2.5},{value:"kitten1",label:"Kitten 4-12 months",rerIndex:2}],T=[{value:"male",label:"Male"},{value:"female",label:"Female"}],W=n(()=>[{value:"35",label:"Small (<25cm)",factor:r.catGender.value==="male"?.9:.75},{value:"40",label:"Average (25-30cm)",factor:r.catGender.value==="male"?1:.9},{value:"45",label:"Big (30-35cm)",factor:r.catGender.value==="male"?1.125:1},{value:"65",label:"Pretty damn big (35-40cm)",factor:r.catGender.value==="male"?1.6:1.4},{value:"90",label:"Massive (>40cm)",factor:r.catGender.value==="male"?2.25:2}]),w={nvwa:[{weight:0,calories:0},{weight:1,calories:200},{weight:2,calories:200},{weight:3,calories:240},{weight:4,calories:280},{weight:5,calories:320},{weight:6,calories:360},{weight:7,calories:400},{weight:8,calories:440},{weight:9,calories:480},{weight:10,calories:520}],royalcanin:[{weight:0,calories:0},{weight:1,calories:225},{weight:2,calories:225},{weight:3,calories:275},{weight:4,calories:325},{weight:5,calories:375},{weight:6,calories:425},{weight:7,calories:475},{weight:8,calories:525},{weight:9,calories:575},{weight:10,calories:625}],petsplace:[{weight:0,calories:0},{weight:.5,calories:39},{weight:.9,calories:65},{weight:1.4,calories:88},{weight:1.8,calories:110},{weight:2.3,calories:130},{weight:2.7,calories:149},{weight:3.2,calories:167},{weight:3.6,calories:184},{weight:4.1,calories:200},{weight:4.5,calories:218},{weight:5,calories:234},{weight:5.5,calories:250},{weight:5.9,calories:265},{weight:6.4,calories:280},{weight:6.8,calories:295},{weight:7.3,calories:310},{weight:7.7,calories:324},{weight:8.2,calories:339},{weight:8.6,calories:353},{weight:9.1,calories:366},{weight:11.4,calories:433}],rawz:[{weight:0,calories:0},{weight:1,calories:183},{weight:2.268,calories:183},{weight:3.402,calories:245},{weight:4.536,calories:303},{weight:5.67,calories:362},{weight:6.804,calories:413},{weight:7.938,calories:462},{weight:9.072,calories:513}],petcube:[{weight:.45,calories:40},{weight:.9,calories:65},{weight:2.3,calories:140},{weight:3.15,calories:166},{weight:4.5,calories:250},{weight:6.8,calories:325},{weight:9.1,calories:400},{weight:11.25,calories:450}],average:[]},L=(l,a)=>{const e=w[l].sort((u,Z)=>u.weight-Z.weight);let t=e[e.length-2].weight,g=e[e.length-2].calories,U=e[e.length-1].weight,z=e[e.length-1].calories;for(let u=0;u<e.length-1;u++)if(a>=e[u].weight&&a<=e[u+1].weight){t=e[u].weight,g=e[u].calories,U=e[u+1].weight,z=e[u+1].calories;break}return{x1:t,y1:g,x2:U,y2:z}},Y=(l,a)=>{const{x1:c,y1:e,x2:t,y2:g}=L(l,a);return e+(a-c)*(g-e)/(t-c)},K=()=>{const l=new Map;for(const e of Object.values(w).filter(t=>t!==w.average))for(const{weight:t,calories:g}of e)l.has(t)||l.set(t,{sum:0,count:0}),l.get(t).sum+=g,l.get(t).count++;return[0,1,2,3,4,5,6,7,8,9,10].filter(e=>l.has(e)).map(e=>({weight:e,calories:l.get(e).sum/l.get(e).count}))};w.average=K();const y=[{value:"default",label:"Average (340kcal)",calories:340},{value:"yarrah",label:"Yarrah Chicken (362kcal)",calories:361.5},{value:"yarrah_sterilized",label:"Yarrah Chicken sterilized (353kcal)",calories:353}],C=[{value:"",label:"None",calories:0},{value:"default",label:"Average (85kcal)",calories:85}],R=[{value:"",label:"None",calories:0},{value:"default",label:"Average (2kcal)",calories:2},{value:"yarrah",label:"Yarrah Mini Snack (2kcal)",calories:2},{value:"catstick",label:"Vitakraft Cat Stick (12kcal)",calories:12},{value:"milk_average",label:"Milk Average (40kcal/50ml)",calories:40},{value:"dried_fish",label:"Dried Fish (8kcal)",calories:8}],j=n(()=>Y(r.calculator.value,Number(r.catWeigth.value))),H=n(()=>{var l;return j.value*(((l=k.find(a=>a.value===r.catAge.value))==null?void 0:l.rerIndex)??1)}),F=n(()=>{var l;return H.value*(((l=W.value.find(a=>a.value===r.catSize.value))==null?void 0:l.factor)??1)}),p=n(()=>{const l=R.find(a=>a.value===r.catFoodSnax.value);return l!=null&&l.calories?F.value*(Number(r.catFoodSnaxPercentage.value)/100)/l.calories:void 0}),q=n(()=>F.value*(1-Number(p.value?r.catFoodSnaxPercentage.value:0)/100)),h=n(()=>{const l=C.find(a=>a.value===r.catFoodWet.value);return l!=null&&l.calories?q.value/4/l.calories*100:void 0}),J=n(()=>q.value/4*(h.value?3:4)),P=n(()=>{var l;return J.value/(((l=y.find(a=>a.value===r.catFoodDry.value))==null?void 0:l.calories)??y[0].calories)*100});return(l,a)=>(v(),m(X,null,{content:x(()=>[s(b,{class:"!bg-cyan-800 !bg-opacity-50 my-5 !rounded-secondary",title:"Cat Calculator",description:"Do a Cat Calculation!"},{default:x(()=>{var c;return[I("div",oe,[s(d,{class:"w-3/4 md:w-1/2",name:"calculator",label:"Calculation based on",modelValue:r.calculator.value,"onUpdate:modelValue":a[0]||(a[0]=e=>r.calculator.value=e),error:r.calculator.error,"onUpdate:error":a[1]||(a[1]=e=>r.calculator.error=e),options:A,rules:[o(i).Required]},null,8,["modelValue","error","rules"]),s(D,{class:"w-3/4 md:w-1/2",name:"catWeigth",label:"Cat Weight (kg)",modelValue:r.catWeigth.value,"onUpdate:modelValue":a[2]||(a[2]=e=>r.catWeigth.value=e),error:r.catWeigth.error,"onUpdate:error":a[3]||(a[3]=e=>r.catWeigth.error=e),rules:[o(i).Required,o(i).Numeric],"min-value":1,"max-value":10,"input-props":{type:"number"}},null,8,["modelValue","error","rules"]),s(d,{class:"w-3/4 md:w-1/2",name:"catAge",label:"Cat Age",modelValue:r.catAge.value,"onUpdate:modelValue":a[4]||(a[4]=e=>r.catAge.value=e),error:r.catAge.error,"onUpdate:error":a[5]||(a[5]=e=>r.catAge.error=e),options:k,rules:[o(i).Required]},null,8,["modelValue","error","rules"]),s(d,{class:"w-3/4 md:w-1/2",name:"catGender",label:"Cat Gender",modelValue:r.catGender.value,"onUpdate:modelValue":a[6]||(a[6]=e=>r.catGender.value=e),error:r.catGender.error,"onUpdate:error":a[7]||(a[7]=e=>r.catGender.error=e),options:T,rules:[o(i).Required]},null,8,["modelValue","error","rules"]),s(d,{class:"w-3/4 md:w-1/2",name:"catSize",label:"Cat Shoulder Height",modelValue:r.catSize.value,"onUpdate:modelValue":a[8]||(a[8]=e=>r.catSize.value=e),error:r.catSize.error,"onUpdate:error":a[9]||(a[9]=e=>r.catSize.error=e),options:W.value,rules:[o(i).Required]},null,8,["modelValue","error","options","rules"]),s(b,{class:"w-full md:w-2/3 my-5 border border-neutral-400 !rounded-primary",description:"Required energy per day: "+F.value.toFixed(1)+" kcal"},null,8,["description"]),s(d,{class:"w-3/4 md:w-1/2",name:"catFoodDry",label:"Dry Food",modelValue:r.catFoodDry.value,"onUpdate:modelValue":a[10]||(a[10]=e=>r.catFoodDry.value=e),error:r.catFoodDry.error,"onUpdate:error":a[11]||(a[11]=e=>r.catFoodDry.error=e),options:y,rules:[o(i).Required]},null,8,["modelValue","error","rules"]),s(d,{class:"w-3/4 md:w-1/2",name:"catFoodWet",label:"Wet Food (25%)",modelValue:r.catFoodWet.value,"onUpdate:modelValue":a[12]||(a[12]=e=>r.catFoodWet.value=e),error:r.catFoodWet.error,"onUpdate:error":a[13]||(a[13]=e=>r.catFoodWet.error=e),options:C,rules:[o(i).Required]},null,8,["modelValue","error","rules"]),s(d,{class:"w-3/4 md:w-1/2",name:"catFoodSnax",label:"Snacks",modelValue:r.catFoodSnax.value,"onUpdate:modelValue":a[14]||(a[14]=e=>r.catFoodSnax.value=e),error:r.catFoodSnax.error,"onUpdate:error":a[15]||(a[15]=e=>r.catFoodSnax.error=e),options:R,rules:[o(i).Required]},null,8,["modelValue","error","rules"]),r.catFoodSnax.value?(v(),m(D,{key:0,class:"w-3/4 md:w-1/2",name:"catFoodSnaxPercentage",label:"Snacks Percentage",modelValue:r.catFoodSnaxPercentage.value,"onUpdate:modelValue":a[16]||(a[16]=e=>r.catFoodSnaxPercentage.value=e),error:r.catFoodSnaxPercentage.error,"onUpdate:error":a[17]||(a[17]=e=>r.catFoodSnaxPercentage.error=e),rules:[o(i).Required,o(i).Numeric],"min-value":1,"max-value":10,"input-props":{type:"number"}},null,8,["modelValue","error","rules"])):le("",!0),s(b,{class:"w-full md:w-2/3 my-5 border border-neutral-400 bg-primary-600 bg-opacity-25 !rounded-primary",title:"Result","sub-title":"Based on constants from "+((c=A.find(e=>e.value===r.calculator.value))==null?void 0:c.label),description:["Required dry food per day: "+P.value.toFixed(1)+" g","","","Required dry food per meal: "+(P.value/(h.value?2:3)).toFixed(1)+" g",...h.value?["Required wet food per day: "+h.value.toFixed(1)+" g"]:[],...p.value?["Allowed snacks per day: "+p.value.toFixed(p.value<1?1:0)+" snacks"]:[],"","","","^ Mogu approved!"]},null,8,["sub-title","description"]),o(M)?(v(),m(Q,{key:2,label:"Create a profile for your cat!",loading:o($)===o(f).PET_OVERVIEW,route:o(f).PET_OVERVIEW},null,8,["loading","route"])):(v(),m(b,{key:1,class:"w-full md:w-1/2 bg-primary-500 bg-opacity-50 !rounded-primary"},{default:x(()=>[a[19]||(a[19]=N(" Please ")),I("a",{class:"cursor-pointer",onClick:a[18]||(a[18]=e=>o(S).push({name:o(f).LOGIN,params:{redirect:JSON.stringify({name:o(f).PET_OVERVIEW})}}))}," Login "),a[20]||(a[20]=N(" to create a profile for your cat! "))]),_:1}))])]}),_:1})]),_:1}))}}),ge=O({__name:"CatCalc",setup(B){return(S,V)=>(v(),m(te))}});export{ge as default};
