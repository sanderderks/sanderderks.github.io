import{_ as m,a as T}from"./c-SwitchField.vue_vue_type_script_setup_true_lang-CqI702AU.js";import{_ as f}from"./c-SelectField.vue_vue_type_script_setup_true_lang-RLKzDD90.js";import{c1 as y,cG as a,cH as c,cI as p,cJ as n,cK as R,cL as v,M as A,bo as _,bQ as g,aK as V,s as H,bH as O,I as u,bi as h,ak as d}from"../bundle.js";var E=(e=>(e[e.HAS_NOT_STARTED=0]="HAS_NOT_STARTED",e[e.HAS_STARTED=1]="HAS_STARTED",e[e.HAS_THROWN_DICES=2]="HAS_THROWN_DICES",e[e.HAS_CHOSEN_DICES=3]="HAS_CHOSEN_DICES",e[e.HAS_CHOSEN_TILE=4]="HAS_CHOSEN_TILE",e[e.HAS_LOST=5]="HAS_LOST",e[e.HAS_FINISHED=6]="HAS_FINISHED",e))(E||{}),b=(e=>(e[e.NONE=0]="NONE",e[e.HAS_LOST_TILE=1]="HAS_LOST_TILE",e[e.HAS_LOST_NOTHING=2]="HAS_LOST_NOTHING",e))(b||{}),N=(e=>(e[e.NONE=0]="NONE",e[e.WINNER_HIGHEST_SCORE=1]="WINNER_HIGHEST_SCORE",e[e.WINNER_HIGHEST_TILE=2]="WINNER_HIGHEST_TILE",e[e.LOSER=3]="LOSER",e))(N||{}),I=(e=>(e[e.PLAYER=0]="PLAYER",e[e.ROBOT=1]="ROBOT",e))(I||{});const S=()=>({gameStatus:0,gameStatusActivator:0,finishStatus:0,loseStatus:0,activePlayer:0,dices:[...L.map(e=>({...e}))],tiles:[...P],score:{0:[],1:[]},robotSpeed:1}),D=e=>{for(let l=1;l<=6;l++)if(e.every(s=>s.value===l))return!0;return!1},C=y("rainwormsStore",{state:()=>S(),getters:{isRolling:e=>e.dices.some(l=>l.isRolling),hasWorm:e=>e.dices.filter(l=>l.selected).some(l=>l.value===6),hasAlreadyChosen:e=>l=>e.dices.some(s=>s.value===l&&s.selected),canSelectAnyTile:e=>l=>e.tiles.some(s=>s.displayValue<=l),canPlay:e=>l=>e.activePlayer===(l??0),visibleTile:e=>l=>{const s=e.score[l??0];return s.length?s[s.length-1]:null},selectedDiceTotal:e=>{let l=0;return e.dices.filter(s=>s.selected).forEach(s=>{l+=s.value===6?5:s.value}),l},totalScore:e=>l=>{let s=0;return e.score[l].forEach(t=>{s+=t.value}),s},personalBest:e=>l=>a().personalBest(c.RAINWORMS,l),highscorePosition:e=>l=>a().highscorePosition(c.RAINWORMS,l)},actions:{reset(e){this.$patch(S()),a().setPreviousHighscores(c.RAINWORMS,e)},start(){this.gameStatus=1},roll(e){if(!this.canPlay(e))return;(this.gameStatus===1||this.gameStatus===4||this.gameStatus===5)&&this.dices.forEach(s=>{s.selected=!1}),this.gameStatus=2;const l=a().diceRollSpeed*1e3;this.dices.forEach(s=>{s.selected||(s.isRolling=!0,setTimeout(()=>{s.value=p(6),s.isRolling=!1,this.dices.sort((t,i)=>t.value-i.value),!this.isRolling&&this.gameStatus!==5&&this.hasLostRound()&&this.loseTurn(e)},p(l,l/3)))}),n(R)},async hasFinishedRolling(){for(;this.isRolling;)await new Promise(e=>setTimeout(e,500));return!0},hasLostRound(){const e=this.dices.filter(l=>!l.selected&&!this.hasAlreadyChosen(l.value));return!e.length||D(e)&&this.dices.every(l=>l.value!==6)},loseTurn(e){this.gameStatus=5,this.gameStatusActivator=e??0,this.score[this.gameStatusActivator].length?this.loseStatus=1:this.loseStatus=2,this.popLastTile(),this.tiles.length===0?this.gameStatus=6:this.passTurn()},popLastTile(){const e=this.score[this.activePlayer];if(e.length){const l=e.splice(e.length-1,1)[0];this.tiles.push(l),this.tiles.sort((s,t)=>s.displayValue-t.displayValue)}this.tiles.splice(this.tiles.length-1,1)},selectDice(e,l){this.canPlay(l)&&!this.isRolling&&this.gameStatus===2&&!e.selected&&!this.hasAlreadyChosen(e.value)&&(this.gameStatus=3,this.dices.filter(s=>s.value===e.value).forEach(s=>{s.selected=!0}),n(v))},selectTile(e,l,s){if(this.canPlay(s)&&(this.gameStatus===2||this.gameStatus===3)){if(this.gameStatus=4,this.gameStatusActivator=s??0,l){const t=this.score[this.activePlayer===0?1:0];t.splice(t.length-1,1)}else this.tiles=this.tiles.filter(t=>t.displayValue!==e.displayValue);this.score[this.activePlayer].push(e),n(v),this.tiles.length===0?this.gameStatus=6:this.passTurn()}},passTurn(e){(this.activePlayer===1||this.gameStatus!==5||e)&&(this.activePlayer===0?setTimeout(()=>{this.activePlayer=1,setTimeout(()=>{this.gameStatus=1,this.gameStatusActivator=0},1e3)},e?0:this.robotSpeed*1e3*2):setTimeout(()=>{this.activePlayer=0},e?0:this.robotSpeed*1e3*2))},async playRobot(){switch(this.gameStatus){case 1:{this.roll(1);break}case 2:{await this.hasFinishedRolling(),setTimeout(()=>{const e=this.dices.filter(s=>!s.selected),l=this.visibleTile(0);if(l&&this.selectedDiceTotal<l.displayValue)for(let s=6;s>=1;s--){const t=e.filter(i=>i.value===s&&!this.hasAlreadyChosen(s));if(t.length){const i=t.length*(s===6?5:s);if(this.selectedDiceTotal+i===l.displayValue){this.selectDice(t[0],1);return}}}for(let s=6;s>=1;s--){const t=e.find(i=>i.value===s);if(t&&!this.hasAlreadyChosen(s)){this.selectDice(t,1);return}}},this.robotSpeed*1e3);break}case 3:{setTimeout(()=>{const e=this.visibleTile(0),l=this.dices.filter(s=>!s.selected).length;if(!l||this.selectedDiceTotal>=30){console.log(l?"i am rich":"i can only pick a tile now");for(let s=this.selectedDiceTotal;s>=21;s--){const t=this.tiles.find(i=>i.displayValue===s);if(t){this.selectTile(t,!1,1);return}}l&&this.roll(1)}if(this.tiles.every(s=>s.displayValue>this.selectedDiceTotal)&&e&&e.displayValue>this.selectedDiceTotal)console.log("my score is too low"),this.roll(1);else if(e&&e.displayValue===this.selectedDiceTotal)console.log("i can steal"),this.selectTile(e,!0,1);else if(new Set(this.dices.filter(s=>s.selected).map(s=>s.value)).size<=3)if(this.dices.filter(s=>!s.selected).length<=2){console.log("there aren't that much dices left");const s=this.tiles.filter(t=>t.displayValue>=this.selectedDiceTotal-5&&t.displayValue<=this.selectedDiceTotal).sort((t,i)=>i.displayValue-t.displayValue);s.length?(console.log("i choose the highest score within 5 tiles"),this.selectTile(s[0],!1,1)):(console.log("i choose to roll again"),this.roll(1))}else console.log("i have nothing to worry about"),this.roll(1);else if(!this.hasWorm)console.log("i am worrying and have no worm yet"),this.roll(1);else{console.log("if i can choose, i choose");const s=this.tiles.filter(t=>t.displayValue<=this.selectedDiceTotal).sort((t,i)=>i.displayValue-t.displayValue);s.length?(console.log("i choose the highest score"),this.selectTile(s[0],!1,1)):(console.log("i choose to roll again"),this.roll(1))}},this.robotSpeed*1e3);break}default:console.log("DEFAULT",this.gameStatus)}},checkFinishStatus(e){const l=this.totalScore(0),s=this.totalScore(1);l>s?this.finishStatus=1:l===s&&Math.max(...this.score[0].map(t=>t.displayValue))>Math.max(...this.score[1].map(t=>t.displayValue))?this.finishStatus=2:this.finishStatus=3,(this.finishStatus===1||this.finishStatus===2)&&(e&&a().updateHighscores(c.RAINWORMS,e,l),new Audio("/sounds/applause-and-cheer.mp3").play())},setPreviousHighscores:(e,l)=>a().setPreviousHighscores(c.RAINWORMS,e,l),fetchGameData:e=>a().fetchGameData(c.RAINWORMS,e),updateHighscores:(e,l)=>a().updateHighscores(c.RAINWORMS,e,l),sortHighscores:()=>a().sortHighscores(c.RAINWORMS)},persist:{enabled:!0}}),L=[{id:1,value:6,selected:!1,isRolling:!1},{id:2,value:6,selected:!1,isRolling:!1},{id:3,value:6,selected:!1,isRolling:!1},{id:4,value:6,selected:!1,isRolling:!1},{id:5,value:6,selected:!1,isRolling:!1},{id:6,value:6,selected:!1,isRolling:!1},{id:7,value:6,selected:!1,isRolling:!1},{id:8,value:6,selected:!1,isRolling:!1}],P=[{displayValue:21,value:1},{displayValue:22,value:1},{displayValue:23,value:1},{displayValue:24,value:1},{displayValue:25,value:2},{displayValue:26,value:2},{displayValue:27,value:2},{displayValue:28,value:2},{displayValue:29,value:3},{displayValue:30,value:3},{displayValue:31,value:3},{displayValue:32,value:3},{displayValue:33,value:4},{displayValue:34,value:4},{displayValue:35,value:4},{displayValue:36,value:4}],B=A({__name:"GameSettingsDialog",props:{isOpen:{type:Boolean,required:!0},isOpenModifiers:{}},emits:["update:isOpen"],setup(e){const l=_(e,"isOpen"),{useAudio:s,diceRollSpeed:t}=g(a()),{robotSpeed:i}=g(C());return(w,o)=>(V(),H(T,{isOpen:l.value,title:"Game Settings",description:"Current version: v3 (17-11-2024)",cancelText:"Close",onCancel:o[3]||(o[3]=r=>l.value=!1)},{default:O(()=>[u(m,{name:"useAudio",label:"Audio",modelValue:h(s),"onUpdate:modelValue":o[0]||(o[0]=r=>d(s)?s.value=r:null)},null,8,["modelValue"]),u(f,{name:"diceSpeed",label:"Dice rolling speed",modelValue:h(t),"onUpdate:modelValue":o[1]||(o[1]=r=>d(t)?t.value=r:null),options:[{value:.5,label:"0.5 seconds"},{value:.75,label:"0.75 seconds"},{value:1,label:"1 second"},{value:1.5,label:"1.5 seconds"},{value:2,label:"2 seconds"},{value:3,label:"3 seconds"},{value:4,label:"4 seconds"},{value:5,label:"5 seconds"}]},null,8,["modelValue"]),u(f,{name:"robotSpeed",label:"Rainworms robot speed",modelValue:h(i),"onUpdate:modelValue":o[2]||(o[2]=r=>d(i)?i.value=r:null),options:[{value:.25,label:"0.25 seconds"},{value:.5,label:"0.5 seconds"},{value:.75,label:"0.75 seconds"},{value:1,label:"1 second"},{value:3,label:"3 seconds"},{value:5,label:"5 seconds"}]},null,8,["modelValue"])]),_:1},8,["isOpen"]))}});export{N as F,E as G,b as L,I as P,B as _,C as u};
